<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:conts="http://wpf.humbatt.com/winfx/xaml/controls"
                    xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml"
                    xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks">

    <Style x:Key="SearchableListControl.HeaderBorderStyle" TargetType="{x:Type Border}">
        <Setter Property="BorderBrush" Value="Gray"/>
        <Setter Property="BorderThickness" Value="0,0,0,1"/>
        <Setter Property="Padding" Value="5"/>
    </Style>

    <Style x:Key="SearchableListControl.FooterBorderStyle" TargetType="{x:Type Border}">
        <Setter Property="BorderBrush" Value="Gray"/>
        <Setter Property="BorderThickness" Value="0,1,0,0"/>
        <Setter Property="Margin" Value="0,0,0,5"/>
    </Style>
    
    <Style x:Key="Humbatt.Wpf.SearchableListControl.Style.WPFUI" TargetType="conts:SearchableListControl">
        <Setter Property="BorderBrush" Value="Gray" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="SearchLabel" Value="Search:" />
        <Setter Property="AddButtonContent">
            <Setter.Value>
                <iconPacks:PackIconMaterial Kind="Plus" />
            </Setter.Value>
        </Setter>
        <Setter Property="ClearButtonContent">
            <Setter.Value>
                <iconPacks:PackIconMaterial Kind="TrashCanOutline" />
            </Setter.Value>
        </Setter>
        <Setter Property="ReloadButtonContent">
            <Setter.Value>
                <iconPacks:PackIconMaterial Kind="Reload" />
            </Setter.Value>
        </Setter>
        <Setter Property="ButtonStyle" Value="{DynamicResource MahApps.Styles.Button.MetroSquare.Accent}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type conts:SearchableListControl}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Border x:Name="PART_Header" Grid.Row="0" Style="{StaticResource SearchableListControl.HeaderBorderStyle}">
                                <StackPanel HorizontalAlignment="Center" Orientation="Horizontal" VerticalAlignment="Center">
                                    <ui:TextBlock Text="{TemplateBinding SearchLabel}" VerticalAlignment="Center"/>
                                    <ui:TextBox x:Name="PART_SearchField" Margin="2,2,2,2" Text="{Binding SearchText, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}" Width="200"/>
                                    <ui:Button Appearance="Primary" x:Name="PART_ClearButton" Margin="2,0,2,0">
                                        <ContentPresenter ContentSource="ClearButtonContent"/>
                                    </ui:Button>
                                    <ui:Button  Appearance="Primary" x:Name="PART_ReloadButton" Margin="2,0,2,0" Command="{TemplateBinding ReloadCommand}">
                                        <ContentPresenter ContentSource="ReloadButtonContent"/>
                                    </ui:Button>
                                    <ui:Button  Appearance="Primary" x:Name="PART_AddButton" Margin="2,0,2,0" Command="{TemplateBinding AddCommand}">
                                        <ContentPresenter ContentSource="AddButtonContent"/>
                                    </ui:Button>
                                </StackPanel>
                            </Border>
                            <DataGrid x:Name="PART_List" AutoGenerateColumns="False" 
                                      Background="{TemplateBinding Background}" 
                                      CanUserAddRows="False" 
                                      CanUserSortColumns="False"
                                      CanUserResizeRows="False" 
                                      CanUserDeleteRows="False" 
                                      GridLinesVisibility="None" 
                                      ItemsSource="{TemplateBinding ItemsSource}" 
                                      RowHeight="24" 
                                      Grid.Row="1" 
                                      SelectionMode="Single" 
                                      SelectedItem="{Binding SelectedItem, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}" 
                                      SelectionUnit="FullRow"
                                      Style="{DynamicResource Humbatt.WpfUI.DataGrid}"/>
                            <Border x:Name="PART_Footer" Grid.Row="2" Style="{StaticResource SearchableListControl.FooterBorderStyle}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <Grid Grid.Row="0">
                                        <ContentPresenter x:Name="PART_FilterPanel" ContentSource="FilterPanel"/>
                                    </Grid>
                                    <Grid Margin="0,5,0,5" Grid.Row="1">
                                        <TextBlock x:Name="PART_ItemCount" FontWeight="SemiBold" HorizontalAlignment="Right" Margin="0,0,5,0" Text="{Binding ItemCountText, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}" VerticalAlignment="Center"/>
                                    </Grid>
                                </Grid>
                            </Border>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Humbatt.WpfUI.Style.DataGridCell" TargetType="{x:Type DataGridCell}">
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Border
                                x:Name="Border"
                                HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                Background="Transparent"
                                BorderBrush="Transparent"
                                BorderThickness="0"
                                SnapsToDevicePixels="True">
                        <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Unfocused" />
                                <VisualState x:Name="Focused" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CurrentStates">
                                <VisualState x:Name="Regular" />
                                <VisualState x:Name="Current">
                                    <!--
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0" Value="Red" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                    -->
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Foreground" Value="White" />
            </MultiTrigger>
            
            <!--<Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="White" />
            </Trigger>-->

            <!--  IsEnabled  -->
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
            </Trigger>

            <!--  IsEnabled and IsSelected  -->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsEnabled" Value="False" />
                    <Condition Property="IsSelected" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Foreground" Value="White" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="Humbatt.WpfUI.Style.DataGridRow" TargetType="{x:Type DataGridRow}">
        <Setter Property="Background">
            <Setter.Value>
                <SolidColorBrush Opacity="0.0" Color="{DynamicResource ControlFillColorDefault}" />
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Validation.ErrorTemplate" Value="{x:Null}" />
        <Setter Property="ValidationErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <TextBlock
                        Margin="2,0,0,0"
                        VerticalAlignment="Center"
                        Foreground="{DynamicResource SystemFillColorCriticalBrush}"
                        Text="!" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridRow}">
                    <Border
                        x:Name="DGR_Border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="True">
                        <SelectiveScrollingGrid>
                            <SelectiveScrollingGrid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </SelectiveScrollingGrid.ColumnDefinitions>
                            <SelectiveScrollingGrid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="Auto" />
                            </SelectiveScrollingGrid.RowDefinitions>
                            <DataGridCellsPresenter
                                Grid.Column="1"
                                ItemsPanel="{TemplateBinding ItemsPanel}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            <DataGridDetailsPresenter
                                Grid.Row="1"
                                Grid.Column="1" VerticalAlignment="Center"
                                SelectiveScrollingGrid.SelectiveScrollingOrientation="{Binding AreRowDetailsFrozen, ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical}, Converter={x:Static DataGrid.RowDetailsScrollingConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                                Visibility="{TemplateBinding DetailsVisibility}" />
                            <DataGridRowHeader
                                Grid.Row="0"
                                Grid.RowSpan="2"
                                Grid.Column="0"
                                SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical"
                                Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Row}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                        </SelectiveScrollingGrid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />

                                <!--  Provide a different appearance for every other row.  -->
                                <VisualState x:Name="Normal_AlternatingRow" />

                                <VisualState x:Name="Normal_Selected">
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Duration="0" To="{DynamicResource SystemAccentColor}" />
                                        <DoubleAnimation Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Opacity)" Duration="0" To="0.6" />
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="Unfocused_Selected">
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Duration="0" To="{DynamicResource SystemAccentColor}" />
                                        <DoubleAnimation Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Opacity)" Duration="0" To="0.6" />
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="Normal_Editing">
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Duration="0" To="{DynamicResource SystemAccentColor}" />
                                        <DoubleAnimation Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Opacity)" Duration="0" To="0.6" />
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="MouseOver_Editing">
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Duration="0" To="{DynamicResource SystemAccentColor}" />
                                        <DoubleAnimation Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Opacity)" Duration="0" To="0.8" />
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="MouseOver_Unfocused_Editing">
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Duration="0" To="{DynamicResource SystemAccentColor}" />
                                        <DoubleAnimation Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Opacity)" Duration="0" To="0.8" />
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="Unfocused_Editing">
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Duration="0" To="{DynamicResource SystemAccentColor}" />
                                        <DoubleAnimation Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Opacity)" Duration="0" To="0.6" />
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Opacity)" Duration="0" To="0.8" />
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="MouseOver_Selected">
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Duration="0" To="{DynamicResource SystemAccentColor}" />
                                        <DoubleAnimation Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Opacity)" Duration="0" To="0.8" />
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="MouseOver_Unfocused_Selected">
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Duration="0" To="{DynamicResource SystemAccentColor}" />
                                        <DoubleAnimation Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Opacity)" Duration="0" To="0.8" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Humbatt.WpfUI.DataGrid" TargetType="{x:Type DataGrid}">
        <Setter Property="RowStyle" Value="{DynamicResource Humbatt.WpfUI.Style.DataGridRow}" />
        <Setter Property="CellStyle" Value="{DynamicResource Humbatt.WpfUI.Style.DataGridCell}" />
        <Setter Property="BorderBrush" Value="LightGray" />
    </Style>

</ResourceDictionary>